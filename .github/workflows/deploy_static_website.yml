name: >-
  Publish static Website into Production Server
  
'on':
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
      folder_path:
        description: Folder to create website in
        type: string
        required: true  
    secrets:
      SERVER_SSH_HOST:
        description: Server IP to deploy on
        required: true
      SERVER_SSH_USERNAME:
        description: Server user
        required: true
      SERVER_SSH_KEY:
        description: Server ssh key
        required: true
      SERVER_SSH_PASSPHRASE:
        description: Server ssh key passphrase
        required: true
      SERVER_SSH_PORT:
        description: Server port to ssh into
        required: true
 

jobs:
  download-build-docker-image:
    runs-on: ${{ inputs.runs-on }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
    
    # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          ls -la
          mkdir ../build
          cp -TR . ../build/
          tar -zcvf deployment.tar.gz  --exclude=**/.git/** ../build/
          ls -la ../build
          ls -la ./
    
      - name: copy file via ssh password
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          host: ${{ secrets.SERVER_SSH_HOST }}
          user: ${{ secrets.SERVER_SSH_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          password: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          local: ./deploy.tar.gz
          remote: ${{ inputs.folder_path }}
    
    
      - name: SSH into Dev Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_SSH_HOST }}
          username: ${{ secrets.SERVER_SSH_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd ${{ inputs.folder_path }}
            tar -zxf deploy.tar.gz
            ls -la
            exit
